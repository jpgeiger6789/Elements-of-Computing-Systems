// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Not(in=sel[0], out=notsel2);
	Not(in=sel[1], out=notsel1);
	Not(in=sel[2], out=notsel0);
	Not(in=notsel0, out=sel0);
	Not(in=notsel1, out=sel1);
	Not(in=notsel2, out=sel2);
	
	And(a=notsel0, b=notsel1, out=outa0);
	And(a=outa0, b=notsel2, out=outa);
	
	And(a=notsel0, b=notsel1, out=outb0);
	And(a=outb0, b=sel2, out=outb);
	
	And(a=notsel0, b=sel1, out=outc0);
	And(a=outc0, b=notsel2, out=outc);
	
	And(a=notsel0, b=sel1, out=outd0);
	And(a=outd0, b=sel2, out=outd);
	
	And(a=sel0, b=notsel1, out=oute0);
	And(a=oute0, b=notsel2, out=oute);
	
	And(a=sel0, b=notsel1, out=outf0);
	And(a=outf0, b=sel2, out=outf);
	
	And(a=sel0, b=sel1, out=outg0);
	And(a=outg0, b=notsel2, out=outg);
	
	And(a=sel0, b=sel1, out=outh0);
	And(a=outh0, b=sel2, out=outh);
	
	And(a=in, b=outa, out=a);
	And(a=in, b=outb, out=b);
	And(a=in, b=outc, out=c);
	And(a=in, b=outd, out=d);
	And(a=in, b=oute, out=e);
	And(a=in, b=outf, out=f);
	And(a=in, b=outg, out=g);
	And(a=in, b=outh, out=h);
}